name: "Secrets Scanner"
description: "Scan Git repositories for secrets using TruffleHog and upload results to artifact API"
author: "AccuKnox"

inputs:
  tenant_id:
    description: "AccuKnox Tenant ID for artifact API."
    required: true
  artifact_api_token:
    description: "Authorization token for the artifact API."
    required: true
  artifact_api_url:
    description: "API URL to upload the TruffleHog results."
    required: true
  label_id:
    description: "Label ID for categorizing the TruffleHog results."
    required: true

runs:
  using: "composite"
  steps:
    # Step 1: Checkout Repository
    - name: Checkout Repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Fetch full history

    # Step 2: Fetch All Branches
    - name: Fetch All Branches
      run: git fetch --all
      shell: bash

    # Step 3: Determine Workflow Context (Push or PR)
    - name: Determine Context
      id: context
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "Pull Request detected"
          echo "IS_PR=true" >> $GITHUB_ENV
          echo "SCAN_BRANCH=${{ github.head_ref }}" >> $GITHUB_ENV
        else
          echo "Direct push detected on branch: ${{ github.ref_name }}"
          echo "IS_PR=false" >> $GITHUB_ENV
          echo "SCAN_BRANCH=${{ github.ref_name }}" >> $GITHUB_ENV
        fi
      shell: bash

    # Step 4: Install TruffleHog
    - name: Install TruffleHog
      run: |
        curl -sSfL https://raw.githubusercontent.com/trufflesecurity/trufflehog/main/scripts/install.sh | sh -s -- -b /usr/local/bin
        trufflehog --version
      shell: bash

    # Step 5: Run TruffleHog Scan
    - name: Run TruffleHog Scan
      id: trufflehog
      continue-on-error: true  # Continue workflow even if TruffleHog fails
      env:
        SCAN_BRANCH: ${{ env.SCAN_BRANCH }}
      run: |
        mkdir -p trufflehog-results
        echo "Running TruffleHog scan on branch: $SCAN_BRANCH"
        trufflehog --no-update git file://./ \
          --branch $SCAN_BRANCH \
          --results=verified,unverified,unknown \
          --fail \
          --json > trufflehog-results/trufflehog-results.json
      shell: bash

    # Step 6: Upload Results to Artifact Storage
    - name: Upload to Artifact Storage
      run: |
        curl --location --request POST "${{ inputs.artifact_api_url }}?tenant_id=${{ inputs.tenant_id }}&data_type=TruffleHog&save_to_s3=false&label_id=${{ inputs.label_id }}" \
          --header "Tenant-Id: ${{ inputs.tenant_id }}" \
          --header "Authorization: Bearer ${{ inputs.artifact_api_token }}" \
          --form "file=@trufflehog-results/trufflehog-results.json"
      shell: bash

    # Step 7: Fail Workflow If TruffleHog Finds Secrets
    - name: Fail on TruffleHog Findings
      if: |
        steps.trufflehog.outputs.result == 'failure' || $(jq -e '.verified | length > 0' trufflehog-results/trufflehog-results.json) == 0
      run: |
        echo "TruffleHog detected critical findings. Failing the workflow."
        exit 1
      shell: bash
